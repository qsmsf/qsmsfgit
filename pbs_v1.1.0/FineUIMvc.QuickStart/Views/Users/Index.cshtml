@model IEnumerable<FineUIMvc.QuickStart.Models.sys_user>

@{
    ViewBag.Title = "Index";
    var F = @Html.F();
}

@section body {
@(F.Grid().IsViewPort(false).ShowHeader(false).ShowBorder(false).ID("Grid1").DataIDField("user_id")
    .DataTextField("user_name").EnableCheckBoxSelect(true).AllowPaging(true).PageSize(10)
        .Toolbars(
            F.Toolbar()
                .Items(
                    F.Button().ID("btnDeleteSelected").Icon(Icon.Delete).Text("删除选中记录")
                        .Hidden(!ViewBag.showDeleteBtn).Listener("click", "onDeleteSelectedClick"),
                    F.ToolbarFill(),
                    F.Button().ID("btnCreate").Icon(Icon.Add).Text("新增用户")
                        .Hidden(!ViewBag.showAddBtn).Listener("click", "onCreateClick")
                )
        )
        .Columns(
            F.RowNumberField(),
            F.RenderField().HeaderText("登录名").DataField("user_name").Width(100),
            F.RenderField().HeaderText("姓名").DataField("user_fullname").Width(100),
            F.RenderField().HeaderText("职位").DataField("user_zw").Width(100),
            F.RenderField().HeaderText("单位").DataField("unit_id").RendererFunction("renderUnit").ExpandUnusedSpace(true),
            F.RenderField().HeaderText("创建时间").DataField("create_time").FieldType(FieldType.Date).Renderer(Renderer.Date)
                .RendererArgument("yyyy-MM-dd").Width(100),
            F.RenderCheckField().HeaderText("状态").DataField("user_state").RenderAsStaticField(true).Width(100),
            F.RenderField().HeaderText("编辑用户").Width(60).RendererFunction("renderEditField").TextAlign(TextAlign.Center)
                .EnableHeaderMenu(true).Hidden(!ViewBag.showEditBtn),
            F.RenderField().HeaderText("删除用户").Width(60).RendererFunction("renderDeleteField").TextAlign(TextAlign.Center)
                .EnableHeaderMenu(true).Hidden(!ViewBag.showDeleteBtn)
        )
        .DataSource(Model)
)
    @(F.HiddenField().ID("myUserId").Text(ViewBag.userId))
    @(F.HiddenField().ID("myUnitId").Text(ViewBag.unitId))
    @(F.HiddenField().ID("dataType").Text(ViewBag.dataType))

@(F.Window()
        .ID("Window1")
        .Width(800)
        .Height(480)
        .IsModal(true)
        .Hidden(true)
        .Target(Target.Top)
        .EnableResize(true)
        .EnableMaximize(true)
        .EnableIFrame(true)
        .IFrameUrl(Url.Content("about:blank"))
        .Listener("close", "onClose")
        //.OnClose(Url.Action("Window1_Close"), "Grid1")
               // .OnClose()
)

}


@section script {

    <script>
        @Html.Raw(ViewBag.StartupScript)
    function renderGender(value, params) {
        return value == 1 ? '男' : '女';
    }

    function renderDeleteField(value, params) {
        return '<a href="javascript:;" class="deletefield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/delete.png")"></a>';
    }

    function renderEditField(value, params) {
        return '<a href="javascript:;" class="editfield"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/pencil.png")"></a>';
    }

    function onCreateClick(event) {
        F.ui.Window1.show('@Url.Content("~/Users/Create")', '新增用户');
        }

        function onClose(event) {
            F.doPostBack('@Url.Action("Window1_Close")', {
                'Grid1_fields': F.ui.Grid1.fields,
                'dataType': F.ui.dataType.getValue(),
                'userId': F.ui.myUserId.getValue(),
                'unitId': F.ui.myUnitId.getValue()
            });
        }

        function deleteSelectedRows(selectedRows) {
            // 触发后台事件
            F.doPostBack('@Url.Action("Grid1_Delete")', {
            'selectedRows': selectedRows,
            'Grid1_fields': F.ui.Grid1.fields,
            'dataType': F.ui.dataType.getValue(),
            'userId': F.ui.myUserId.getValue(),
            'unitId': F.ui.myUnitId.getValue()
        });
    }

    function onDeleteSelectedClick(event) {
        var grid1 = F.ui.Grid1;

        if (!grid1.hasSelection()) {
            F.alert('请至少选择一项！');
            return;
        }

        var selectedRows = grid1.getSelectedRows();
        F.confirm({
            message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
            target: '_top',
            ok: function () {
                deleteSelectedRows(selectedRows);
            }
        });
    }

    F.ready(function () {

        var grid1 = F.ui.Grid1;

        grid1.el.on('click', 'a.deletefield', function (event) {
            var rowEl = $(this).closest('.f-grid-row');
            var rowData = grid1.getRowData(rowEl);

            F.confirm({
                message: '你确定要删除选中的行数据吗？',
                target: '_top',
                ok: function () {
                    deleteSelectedRows([rowData.id]);
                }
            });
        });

        grid1.el.on('click', 'a.editfield', function (event) {
            var rowEl = $(this).closest('.f-grid-row');
            var rowData = grid1.getRowData(rowEl);

            F.ui.Window1.show('@Url.Content("~/Users/Edit/")' + rowData.id, '编辑用户');
        });

    });


    </script>
<script src="~/res/js/Utils.js"></script>
}
